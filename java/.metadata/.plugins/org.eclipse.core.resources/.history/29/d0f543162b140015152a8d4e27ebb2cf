package cn.itcast.xml;

import java.util.List;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;

import org.junit.Test;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;

//使用dom方式对xml文档进行crud
public class Demo03 {
   
	/*
	//读取xml文档中：<书名>javascript网页开发</书名>   节点中的值
	@Test
	public void read1() throws Exception{
		DocumentBuilderFactory factory=DocumentBuilderFactory.newInstance();
		DocumentBuilder builder=factory.newDocumentBuilder();
		Document document=builder.parse("src/book.xml");
		
		NodeList list=document.getElementsByTagName("书名");
		Node node=list.item(1);
		String content=node.getTextContent();
		System.out.println(content);
	}
	*/
	//得到xml文档中的所有标签
	@Test
	public void read2() throws Exception{
		DocumentBuilderFactory factory=DocumentBuilderFactory.newInstance();
		DocumentBuilder builder=factory.newDocumentBuilder();
		Document document=builder.parse("src/book.xml");
		
	    //得到跟节点
		Node root=document.getElementsByTagName("书架").item(0);
		
		list(root);
	}

	private void list(Node node) {
		if(node instanceof Element){
			System.out.println(node.getNodeName());
		}
		
		NodeList list=node.getChildNodes();
		for(int i=0;i<list.getLength();i++){
			Node child=list.item(i);
			list(child);
		}
		
	}
	
	//读取xml文档中标签属性的值：<书名 name="xxx">javascript网页开发</书名>   节点中的值
	@Test
	public void read1() throws Exception{
		DocumentBuilderFactory factory=DocumentBuilderFactory.newInstance();
		DocumentBuilder builder=factory.newDocumentBuilder();
		Document document=builder.parse("src/book.xml");
		
		NodeList list=document.getElementsByTagName("书名");
		Node node=list.item(1);
		String content=node.getTextContent();
		System.out.println(content);
	}
}
