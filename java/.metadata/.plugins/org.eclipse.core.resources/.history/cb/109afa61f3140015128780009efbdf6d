package cn.itcast.xml.sax;

import java.util.ArrayList;
import java.util.List;

import javax.xml.parsers.SAXParser;
import javax.xml.parsers.SAXParserFactory;

import org.xml.sax.Attributes;
import org.xml.sax.SAXException;
import org.xml.sax.XMLReader;
import org.xml.sax.helpers.DefaultHandler;

/**
 * sax解析xml文档
 * @author Administrator
 *
 */
public class Demo03 {
     @SuppressWarnings("unchecked")
	public static void main(String[] args) throws Exception{
    	 //1.创建解析工厂
    	 SAXParserFactory factory=SAXParserFactory.newInstance();
    	 //2.得到解析器
    	 SAXParser sp=factory.newSAXParser();
    	 //3.得到读取器
    	 XMLReader reader=sp.getXMLReader();
    	 //4.设置内容处理器
    	 BeanListHandler handle=new BeanListHandler();
    	 reader.setContentHandler(handle);
    	 //5.读取xml文档内容
    	 reader.parse("src/book.xml");
    	 
    	 List<Book> list=handle.getBooks();
    	 System.out.println(list);
     }
	
}

//把xml文档中的每一本数封装到一个book对象，并把多个book对象放在一个list集合中返回
class BeanListHandler extends DefaultHandler{
    
	private List list=new ArrayList();
	private String currentTag;
	private Book book;
	
	@Override
	public void startElement(String uri, String localName, String qName,
			Attributes attributes) throws SAXException {
         currentTag=qName;
         if("书".equals(currentTag)){
        	 book=new Book();
         }
	}

	@Override
	public void characters(char[] ch, int start, int length)
			throws SAXException {
          if("书名".equals(currentTag)){
        	  String name=new String(ch,start,length);
        	  book.setName(name);
          }
          if("作者".equals(currentTag)){
        	  String author=new String(ch,start,length);
        	  book.setAuthor(author);
          }
          if("价格".equals(currentTag)){
        	  String price=new String(ch,start,length);
        	  book.setPrice(price);
          }
	}
	
	@Override
	public void endElement(String uri, String localName, String qName)
			throws SAXException {
           if(qName.equals(currentTag)){
        	   list.add(book);
        	   book=null;
           }
           currentTag=null;
	}

	public List getBooks() {
		return list;
	}
	
	
}
